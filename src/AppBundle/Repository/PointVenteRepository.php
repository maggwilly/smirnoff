<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * PointVenteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PointVenteRepository extends EntityRepository
{

/**
Nombre de point de vente recencés
 */
	public function nombrePointVente ($region=null){

        $qb = $this->createQueryBuilder('p');

   try {
		 $qb->select('count(p.id) as nombrePointVente');
         return $qb->getQuery()->getSingleScalarResult();  
   } catch (NoResultException $e) {
        return 0;
     }
  }

/**
Nombre de point de vente visités
 */
  public function pointVentes($region=null, $startDate=null, $endDate=null){

        $qb = $this->createQueryBuilder('p');
        if($region!=null){
           $qb->where('p.type=:type')
          ->setParameter('type', $region);
          }
  
         return $qb->getQuery()->getArrayResult();  
   
  }

/**
Nombre de point de vente visités
 */
  public function findPosRhs($region=null, $startDate=null, $endDate=null){

        $qb = $this->createQueryBuilder('p')->leftJoin('p.rapports','r')->leftJoin('r.rh','rh');
        if($region!=null){
           $qb->where('p.type=:type')
          ->setParameter('type', $region);
          }
     if($startDate!=null){
           $qb->andWhere('r.date>=:startDate')
          ->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('r.date<=:endDate')
          ->setParameter('endDate',new \DateTime($endDate));
          }
           $qb->select('p.nom')->addSelect('p.quartier')->addSelect('p.description')->addSelect('p.type')->addSelect('p.tel')->addSelect('r.date')
             ->addSelect('rh.nom as nomrh');
         return $qb->getQuery()->getArrayResult();  
   
  }
}
