<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientRepository extends \Doctrine\ORM\EntityRepository
{

  /**
  *Nombre total de visite effectue par utilisateur 
  */
  public function visitesParUser ( $region=null, $startDate=null, $endDate=null){

       $qb = $this->createQueryBuilder('u')->leftJoin('u.rapports','v', 'WITH','(v.date is null or v.date>=:startDate) and (v.date is null or v.date<=:endDate)')
       ->setParameter('startDate', new \DateTime($startDate))
       ->setParameter('endDate',new \DateTime($endDate))
      ->where('u.type=:type')->setParameter('type','super');
            $qb->select('max(v.date) as date');
            $qb->addSelect('u.id');
             $qb->addSelect('u.nom');
             $qb->addGroupBy('u.nom');
            $qb->addGroupBy('u.id');
            $qb->addSelect('count(v.id) as nombre'); 
          return $qb->getQuery()->getArrayResult();
     
  }

  /**
  *Nombre de synchro effectue par utilisateur 
  */
  public function synchrosParUser ($startDate=null, $endDate=null){

       $qb = $this->createQueryBuilder('u')->leftJoin('u.synchros','s', 'WITH','(s.date is null or s.date>=:startDate) and (s.date is null or s.date<=:endDate)')
       ->setParameter('startDate', new \DateTime($startDate))
       ->setParameter('endDate',new \DateTime($endDate))
      ->where('u.type=:type')->setParameter('type','super');
            $qb->select('max(s.date) as date');
            $qb->addSelect('u.id');
             $qb->addSelect('u.nom');
             $qb->addGroupBy('u.nom');
            $qb->addGroupBy('u.id');
            $qb->addSelect('count(s.id) as nombre'); 
          return $qb->getQuery()->getArrayResult();
  }

 
}
